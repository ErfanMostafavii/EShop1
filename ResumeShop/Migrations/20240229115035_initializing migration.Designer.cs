// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResumeShop.Data;

namespace ResumeShop.Migrations
{
    [DbContext(typeof(EshopContext))]
    [Migration("20240229115035_initializing migration")]
    partial class initializingmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ResumeShop.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "لوازم سامسونگ",
                            Name = "سامسونگ"
                        },
                        new
                        {
                            Id = 2,
                            Description = "لوازم هواوی",
                            Name = "هواوی"
                        },
                        new
                        {
                            Id = 3,
                            Description = "لوازم شیایومی",
                            Name = "شیاومی"
                        },
                        new
                        {
                            Id = 4,
                            Description = "لوازم اپل",
                            Name = "اپل"
                        });
                });

            modelBuilder.Entity("ResumeShop.Models.CategoryToProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryToProducts");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            CategoryId = 4
                        });
                });

            modelBuilder.Entity("ResumeShop.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("Money");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 33m,
                            QuantityInStock = 4
                        },
                        new
                        {
                            Id = 2,
                            Price = 34m,
                            QuantityInStock = 9
                        },
                        new
                        {
                            Id = 3,
                            Price = 45m,
                            QuantityInStock = 10
                        });
                });

            modelBuilder.Entity("ResumeShop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "آیفون سیزده سی اچ پارت نامبر اروپا",
                            ItemId = 1,
                            Name = "گوشی موبایل iphone 13"
                        },
                        new
                        {
                            Id = 2,
                            Description = "آیفون سیزده سی اچ پارت نامبر چین",
                            ItemId = 2,
                            Name = "گوشی موبایل iphone 12"
                        },
                        new
                        {
                            Id = 3,
                            Description = "آیفون سیزده سی اچ پارت نامبر امریکا",
                            ItemId = 3,
                            Name = "گوشی موبایل iphone 11"
                        });
                });

            modelBuilder.Entity("ResumeShop.Models.CategoryToProduct", b =>
                {
                    b.HasOne("ResumeShop.Models.Category", "Category")
                        .WithMany("categoryToProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResumeShop.Models.Product", "Product")
                        .WithMany("categoryToProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ResumeShop.Models.Product", b =>
                {
                    b.HasOne("ResumeShop.Models.Item", "Item")
                        .WithOne("Product")
                        .HasForeignKey("ResumeShop.Models.Product", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
